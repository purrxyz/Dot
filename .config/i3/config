# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!  
set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
#font pango:monospace 8
font pango: System San Francisco Display, FontAwesome 10

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
#bindsym $mod+Return exec i3-sensible-terminal
bindsym $mod+Return exec urxvt

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
#bindsym $mod+d exec --no-startup-id i3-dmenu-desktop
#bindsym $mod+d exec dmenu_run -nb "$bg-color" -nf "$text-color" -sb "$urgent-bg-color" -sf "$text-color"
bindsym $mod+d exec /home/sepia/.dmenu/dmen.sh

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+z split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Change below the name of the workspaces, and you won't have to change both "switch to workspace" and "move focused container to workspace"

set $workspace1 "" 
set $workspace2 ""
set $workspace3 ""
set $workspace4 ""
set $workspace5 ""
set $workspace6 ""
set $workspace7 ""
set $workspace8 ""
set $workspace9 ""
set $workspace10 ""

# switch to workspace
bindsym $mod+1 workspace $workspace1
bindsym $mod+2 workspace $workspace2
bindsym $mod+3 workspace $workspace3
bindsym $mod+4 workspace $workspace4
bindsym $mod+5 workspace $workspace5
bindsym $mod+6 workspace $workspace6
bindsym $mod+7 workspace $workspace7
bindsym $mod+8 workspace $workspace8
bindsym $mod+9 workspace $workspace9
bindsym $mod+0 workspace $workspace10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $workspace1
bindsym $mod+Shift+2 move container to workspace $workspace2
bindsym $mod+Shift+3 move container to workspace $workspace3
bindsym $mod+Shift+4 move container to workspace $workspace4
bindsym $mod+Shift+5 move container to workspace $workspace5
bindsym $mod+Shift+6 move container to workspace $workspace6
bindsym $mod+Shift+7 move container to workspace $workspace7
bindsym $mod+Shift+8 move container to workspace $workspace8
bindsym $mod+Shift+9 move container to workspace $workspace9
bindsym $mod+Shift+0 move container to workspace $workspace10

# Before assaign application class make sure whats the correct WM_CLASS use 'xprop' to see the correct class  
assign [class="Amarok"] $workspace10

# reload the configuration file
bindsym $mod+Shift+c reload

# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym h resize shrink width 10 px or 10 ppt
        bindsym j resize grow height 10 px or 10 ppt
        bindsym k resize shrink height 10 px or 10 ppt
        bindsym l resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"
# Place here triables can also be created using a value configured in the X resource database. This is useful, for example, to avoid configuring color values within the i3 configuration. Instead, the values can be configured, once, in the X resource database to achieve an easily maintainable, consistent color theme across many X applications.
# window colors config from Alex Booker's configuration https://github.com/bookercodes/dotfiles/blob/ubuntu/.i3/config%7E

#set $bg-color            #2f343f
#set $inactive-bg-color   #2f343f
#set $text-color          #f3f4f5
#set $inactive-text-color #676E7D
#set $urgent-bg-color     #E53935
set $bg-color #4f136b
set $inactive-bg-color #4f136b
set $text-color #8c9dc1
set $inactive-text-color #701a90
set $urgent-bg-color #952327

# window colors
#                       border              background         text                 indicator
client.focused          $bg-color           $bg-color          $text-color          $bg-color
client.unfocused        $iancative-bg-color $inactive-bg-color $inactive-text-color $bg-color
client.focused_inactive $iancative-bg-color $inactive-bg-color $inactive-text-color $bg-color
client.urgent           $urgent-bg-color    $urgent-bg-color   $text-color          $bg-color


# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
bar {   
	## powerline i3bar
	##
	#status_command python /usr/share/powerline/bindings/i3/powerline-i3.py 
        #font pango:AnonymousPro for Powerline 10
	##
	font pango: System San Francisco Display, FontAwesome 10
	#status_command i3status   # original i3bar
        # alternativ status bar i3blocks
	status_command i3blocks -c ~/.i3/i3blocks.conf
	tray_output primary
	#stip_workspace_numbers yes
	position top
	#status_command ~/bin/conky-i3bar
	colors {
		background $bg-color
	        separator $bg-urgent
		#                  border             background         text
		focused_workspace  $bg-color          $bg-color          $text-color
		inactive_workspace $inactive-bg-color $inactive-bg-color $inactive-text-color
		urgent_workspace   $urgent-bg-color   $urgent-bg-color   $text-color
              }
	}
########################################################################################################################

# Set lock screen 
# bindsym $mod+shift+x exec i3lock -b -i ~/Pictures/875486.png
bindsym XF86ScreenSaver exec i3lock -b -i ~/Screensaver/s6_1024x768.png

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play
bindsym XF86AudioStop exec playerctl stop
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Application thats starts when login
#exec urxvt -e wal -i ~/Pictures/fractal.jpg
exec urxvt
exec mpd
#exec_always watch -n 1 -d sensors
exec_always feh --bg-scale ~/Wallpapers/Synthwave/wp2343898.jpg
exec_always wal -i ~/Wallpapers/Synthwave/wp2343898.jpg
exec_always xrandr --output VIRTUAL1 --off --output LVDS1 --mode 1024x768 --pos 0x0 --rotate normal --output TV1 --off --output VGA1 --off

# Use compton to fade windows in/out effect
exec_always compton -f

# Enable calendar to open in floating mode instead of popup as normal tile.
#for_window [class="Yad"] floating enable

# keybindings for terminal apps to load on a specific workspace
#bindsym $mod+Shift+f exec urxvt -e ranger
#bindsym $mod+Shift+m workspace ; exec amarok
bindsym $mod+Shift+m exec amarok
bindsym $mod+n workspace ; exec urxvt -e ncmpcpp
bindsym $mod+Shift+n workspace ; exec urxvt -e newsboat
bindsym $mod+Shift+f workspace ; exec urxvt -e vifm
bindsym $mod+Shift+p workspace ; exec pcmanfm
bindsym $mod+y workspace ; exec urxvt -e mpsyt
bindsym $mod+p workspace ; exec xpad
bindsym $mod+q exec xpad -q
bindsym $mod+Shift+a workspace ; exec abrowser
bindsym $mod+Shift+i workspace ; exec luakit
#bindsym $mod+Shift+i exec icecat

# Take screen shot with scrot and moves to a destinatio n directory
bindsym --release Print exec scrot '%Y-%m-%d_%H-%M-%S_$wx$h.png' -e 'mv $f ~/Pictures/Screenshots/'

# Take a screenshot upon pressing Print (select an area).
#bindsym --release Print exec --no-startup-id import /tmp/latest-screenshot.png

# Starts dunst for notifications:
exec --no-startup-id dunst

# Unclutter makes the mouse invisible after a brief period of time
exec --no-startup-id unclutter
